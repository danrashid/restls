{
  "numFailedTestSuites": 0,
  "numFailedTests": 0,
  "numPassedTestSuites": 11,
  "numPassedTests": 51,
  "numPendingTestSuites": 0,
  "numPendingTests": 0,
  "numRuntimeErrorTestSuites": 0,
  "numTotalTestSuites": 11,
  "numTotalTests": 51,
  "openHandles": [],
  "snapshot": {
    "added": 0,
    "didUpdate": false,
    "failure": false,
    "filesAdded": 0,
    "filesRemoved": 0,
    "filesUnmatched": 0,
    "filesUpdated": 0,
    "matched": 0,
    "total": 0,
    "unchecked": 0,
    "uncheckedKeysByFile": [],
    "unmatched": 0,
    "updated": 0
  },
  "startTime": 1533514902411,
  "success": true,
  "testResults": [
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Updates a member of a collection by id",
          "location": null,
          "status": "passed",
          "title": "Updates a member of a collection by id"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName":
            "Rejects with an error if no matching member id was found",
          "location": null,
          "status": "passed",
          "title": "Rejects with an error if no matching member id was found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Resolves with the updated member",
          "location": null,
          "status": "passed",
          "title": "Resolves with the updated member"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName":
            "Rejects with an error if the specified collection was not found",
          "location": null,
          "status": "passed",
          "title":
            "Rejects with an error if the specified collection was not found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Outputs debugging information if specified",
          "location": null,
          "status": "passed",
          "title": "Outputs debugging information if specified"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Supports faking latency with a timeout",
          "location": null,
          "status": "passed",
          "title": "Supports faking latency with a timeout"
        }
      ],
      "endTime": 1533514906082,
      "message": "",
      "name": "C:\\Users\\dan\\repos\\restls\\src\\PUT.test.ts",
      "startTime": 1533514904561,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Adds a new member to a collection with a uuid",
          "location": null,
          "status": "passed",
          "title": "Adds a new member to a collection with a uuid"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Supports a custom id generator",
          "location": null,
          "status": "passed",
          "title": "Supports a custom id generator"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Resolves with the new member, with an id",
          "location": null,
          "status": "passed",
          "title": "Resolves with the new member, with an id"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName":
            "Rejects with an error if the generated id is not unique to the collection",
          "location": null,
          "status": "passed",
          "title":
            "Rejects with an error if the generated id is not unique to the collection"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName":
            "Rejects with an error if the specified collection was not found",
          "location": null,
          "status": "passed",
          "title":
            "Rejects with an error if the specified collection was not found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Outputs debugging information if specified",
          "location": null,
          "status": "passed",
          "title": "Outputs debugging information if specified"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Supports faking latency with a timeout",
          "location": null,
          "status": "passed",
          "title": "Supports faking latency with a timeout"
        }
      ],
      "endTime": 1533514906088,
      "message": "",
      "name": "C:\\Users\\dan\\repos\\restls\\src\\POST.test.ts",
      "startTime": 1533514904531,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Patches a member of a collection by id",
          "location": null,
          "status": "passed",
          "title": "Patches a member of a collection by id"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName":
            "Rejects with an error if no matching member id was found",
          "location": null,
          "status": "passed",
          "title": "Rejects with an error if no matching member id was found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Resolves with an empty object",
          "location": null,
          "status": "passed",
          "title": "Resolves with an empty object"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName":
            "Rejects with an error if the specified collection was not found",
          "location": null,
          "status": "passed",
          "title":
            "Rejects with an error if the specified collection was not found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Outputs debugging information if specified",
          "location": null,
          "status": "passed",
          "title": "Outputs debugging information if specified"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Supports faking latency with a timeout",
          "location": null,
          "status": "passed",
          "title": "Supports faking latency with a timeout"
        }
      ],
      "endTime": 1533514906150,
      "message": "",
      "name": "C:\\Users\\dan\\repos\\restls\\src\\PATCH.test.ts",
      "startTime": 1533514904631,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Deletes the first matching member of a collection",
          "location": null,
          "status": "passed",
          "title": "Deletes the first matching member of a collection"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Rejects with an error if no matching member was found",
          "location": null,
          "status": "passed",
          "title": "Rejects with an error if no matching member was found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Resolves with an empty object",
          "location": null,
          "status": "passed",
          "title": "Resolves with an empty object"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName":
            "Rejects with an error if the specified collection was not found",
          "location": null,
          "status": "passed",
          "title":
            "Rejects with an error if the specified collection was not found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Outputs debugging information if specified",
          "location": null,
          "status": "passed",
          "title": "Outputs debugging information if specified"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Supports faking latency with a timeout",
          "location": null,
          "status": "passed",
          "title": "Supports faking latency with a timeout"
        }
      ],
      "endTime": 1533514906205,
      "message": "",
      "name": "C:\\Users\\dan\\repos\\restls\\src\\DELETE.test.ts",
      "startTime": 1533514904636,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Deletes all matching members of a collection",
          "location": null,
          "status": "passed",
          "title": "Deletes all matching members of a collection"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName":
            "Changes no data and emits no error if no matching members were found",
          "location": null,
          "status": "passed",
          "title":
            "Changes no data and emits no error if no matching members were found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Resolves with an empty object",
          "location": null,
          "status": "passed",
          "title": "Resolves with an empty object"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName":
            "Rejects with an error if the specified collection was not found",
          "location": null,
          "status": "passed",
          "title":
            "Rejects with an error if the specified collection was not found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Outputs debugging information if specified",
          "location": null,
          "status": "passed",
          "title": "Outputs debugging information if specified"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Supports faking latency with a timeout",
          "location": null,
          "status": "passed",
          "title": "Supports faking latency with a timeout"
        }
      ],
      "endTime": 1533514906230,
      "message": "",
      "name": "C:\\Users\\dan\\repos\\restls\\src\\DELETES.test.ts",
      "startTime": 1533514904692,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Returns only the first matching member of a collection",
          "location": null,
          "status": "passed",
          "title": "Returns only the first matching member of a collection"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Throws if no matching member was found",
          "location": null,
          "status": "passed",
          "title": "Throws if no matching member was found"
        }
      ],
      "endTime": 1533514906271,
      "message": "",
      "name":
        "C:\\Users\\dan\\repos\\restls\\src\\utils\\getCollectionMember.test.ts",
      "startTime": 1533514906102,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Resolves with all matching members of a collection",
          "location": null,
          "status": "passed",
          "title": "Resolves with all matching members of a collection"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName":
            "Resolves with an entire collection if no match criteria were specified",
          "location": null,
          "status": "passed",
          "title":
            "Resolves with an entire collection if no match criteria were specified"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Emits no error if no matching members were found",
          "location": null,
          "status": "passed",
          "title": "Emits no error if no matching members were found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName":
            "Rejects with an error if the specified collection was not found",
          "location": null,
          "status": "passed",
          "title":
            "Rejects with an error if the specified collection was not found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Outputs debugging information if specified",
          "location": null,
          "status": "passed",
          "title": "Outputs debugging information if specified"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Supports faking latency with a timeout",
          "location": null,
          "status": "passed",
          "title": "Supports faking latency with a timeout"
        }
      ],
      "endTime": 1533514906274,
      "message": "",
      "name": "C:\\Users\\dan\\repos\\restls\\src\\GETS.test.ts",
      "startTime": 1533514906108,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Gets and parses a collection",
          "location": null,
          "status": "passed",
          "title": "Gets and parses a collection"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Throws if the specified collection was not found",
          "location": null,
          "status": "passed",
          "title": "Throws if the specified collection was not found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Throws if the specified collection cannot be parsed",
          "location": null,
          "status": "passed",
          "title": "Throws if the specified collection cannot be parsed"
        }
      ],
      "endTime": 1533514906315,
      "message": "",
      "name": "C:\\Users\\dan\\repos\\restls\\src\\getCollection.test.ts",
      "startTime": 1533514906167,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Resolves with the first matching member of a collection",
          "location": null,
          "status": "passed",
          "title": "Resolves with the first matching member of a collection"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Rejects with an error if no matching member was found",
          "location": null,
          "status": "passed",
          "title": "Rejects with an error if no matching member was found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName":
            "Rejects with an error if the specified collection was not found",
          "location": null,
          "status": "passed",
          "title":
            "Rejects with an error if the specified collection was not found"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Outputs debugging information if specified",
          "location": null,
          "status": "passed",
          "title": "Outputs debugging information if specified"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Supports faking latency with a timeout",
          "location": null,
          "status": "passed",
          "title": "Supports faking latency with a timeout"
        }
      ],
      "endTime": 1533514906388,
      "message": "",
      "name": "C:\\Users\\dan\\repos\\restls\\src\\GET.test.ts",
      "startTime": 1533514906253,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Gets an item out of localStorage by key",
          "location": null,
          "status": "passed",
          "title": "Gets an item out of localStorage by key"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Throws if no item in localStorage has the specified key",
          "location": null,
          "status": "passed",
          "title": "Throws if no item in localStorage has the specified key"
        }
      ],
      "endTime": 1533514906412,
      "message": "",
      "name": "C:\\Users\\dan\\repos\\restls\\src\\utils\\getItem.test.ts",
      "startTime": 1533514906288,
      "status": "passed",
      "summary": ""
    },
    {
      "assertionResults": [
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Stores a collection by key as JSON",
          "location": null,
          "status": "passed",
          "title": "Stores a collection by key as JSON"
        },
        {
          "ancestorTitles": [],
          "failureMessages": [],
          "fullName": "Throws if a collection contains duplicate ids",
          "location": null,
          "status": "passed",
          "title": "Throws if a collection contains duplicate ids"
        }
      ],
      "endTime": 1533514906878,
      "message": "",
      "name": "C:\\Users\\dan\\repos\\restls\\src\\setCollection.test.ts",
      "startTime": 1533514906232,
      "status": "passed",
      "summary": ""
    }
  ],
  "wasInterrupted": false
}
